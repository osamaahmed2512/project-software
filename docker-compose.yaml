# version: '3.8'

# services:
#   springbootapp:
#     build:
#       context: ./E-Commerce
#       dockerfile: Dockerfile
#     ports:
#       - "8080:8080"
#     depends_on:
#       - mysql

#   mysql:
#     image: mysql:latest
#     ports:
#       - "3306:3306"
#     environment:
#       MYSQL_ROOT_PASSWORD: root
#       MYSQL_DATABASE: your_datrootabase_name




version: "3.8"

services:
  mysqldb:
    container_name: mysqldb
    image: mysql:latest
    environment:
      # MYSQL_USER: root
      # MYSQL_PASSWORD: root
      MYSQL_DATABASE: ecom
      MYSQL_ROOT_PASSWORD: root 
    ports:
      - 3307:3306
    volumes:
      - ./mysql-data:/var/lib/mysql    
    networks:
      springboot-mysql-net:

  springboot-restful-webservices:
    container_name: springboot-restful-webservices
    build:
      context: ./E-Commerce
      dockerfile: Dockerfile
    ports:
      - 8080:8080
    depends_on:
      - mysqldb
    environment:  
      - spring.jpa.hibernate.ddl-auto=update
      - spring.datasource.url=jdbc:mysql://mysqldb:3306/ecom
      - spring.datasource.username=root
      - spring.datasource.password=root
      - spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
    networks:
      springboot-mysql-net:
    restart: on-failure

  # angular-frontend:
    # container_name: angular-frontend
    # build:
    #   context: ./E-commerce-web
    #   dockerfile: Dockerfile
    # ports:
    #   - 80:80
    # networks:
    #   - springboot-mysql-net
    # image: awesome-angular
    # ports:
    #   - 4200:4200
    # volumes:
    #   - ./E-commerce-web:/project
    #   - /project/node_modules

  # angular-frontend:
  #   build:
  #     context: ./E-commerce-web
  #     dockerfile: Dockerfile
  #   stdin_open: true  
  #   ports:
  #     - 4200:4200
  #   volumes:
  #     - ./E-commerce-web:/project
  #     - /project/node_modules
  #   networks:
  #     - springboot-mysql-net


networks:
  springboot-mysql-net:  
      driver: bridge
